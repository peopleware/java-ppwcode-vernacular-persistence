<document>

  <!-- see http://maven.apache.org/reference/plugins/changes/ for documentation -->
  <!-- There are four valid values for action type:  add, fix, remove, update. -->

  <properties>
    <title>Changes to ppw-persistence</title>
    <author email="David_Van_Keer@peopleware.be">David Van Keer</author>
    <author email="Jan_Dockx@peopleware.be">Jan Dockx</author>
    <author email="Nele_Smeets@peopleware.be">Nele Smeets</author>
  </properties>
  <body>

    <release version="II v2.1.0/3.1" date="2006-07-30" description="Paging.">
      <action dev="jand" type="add">
        Generalized paging to make Hibernate-independent.
      </action>
    </release>

    <release version="II v2.0.0/3.1" date="2006-07-28" description="Paging.">
      <action dev="jand" type="add">
        Added a class that does paging retrieve for Hibernate.
      </action>
      <action dev="jand" type="add">
        JUnit Hibernate tests now do testAllInstances with paging. A protected
        method that was introduced recently, was changed (this might break compatibility
        for some classes, but it was rarely used, and the change is easy).
      </action>
    </release>

    <release version="II v1.2.0/3.1" date="2005-11-22" description="Correct resetting of id after failed creation.">
      <action dev="jand" type="fix">
        Now, HibernateAsyncCrudDao.cancelTransaction correctly resets the id's to null of all created
        objects (which failed). Previously, we didn't realize that Hibernate already sets the new id during
        save, and only save during commit, and does not reset the id. Now, on failure,
        we reset the id of all created objects, also through cascade, to null.
      </action>
      <action dev="jand" type="add">
        The method isCreated was added to the interface AsyncCrudDao.
      </action>
    </release>

    <release version="II v1.1.0/3.0" date="2005-09-09" description="More debug information added.">
      <action dev="dvankeer" type="update">
        Added more information on type invariant failured. Added failedcontidion to debug information
      </action>
    </release>

    <release version="II v1.1.0/2.0" date="2005-09-06" description="SqlExceptionHandler">
      <action dev="jand" type="add">
        Factored out SQLException handling out of HibernateAsyncCrudDao. Compatible change.
      </action>
    </release>

    <release version="II v1.0.1/2.0" date="2005-09-06" description="Fix in create method of AsyncCrudDao">
      <action dev="jand" type="fix">
        Removed superfluous session flush.
      </action>
    </release>

    <release version="II v1.0.1/1.0" date="2005-09-06" description="Fix in JUnit test helper classes">
      <action dev="jand" type="fix">
        Interface of junit.hibernate was missing a method, and had wrong method names. Incompatible
        for who was using these classes. Luckily, a quick fix.
      </action>
    </release>

    <release version="II v1.0.0/1.0" date="2005-09-05" description="PersistentBean is changed into an interface">
      <action dev="nsmeets" type="add">
        PersistentBean is changed into an interface. An abstract subclass AbstractPersistentBean containing a partial implementation of the interface is introduced.
        The package be.peopleware.persistence_II.junit.hibernate is introduced.
      </action>
    </release>

    <release version="I v3.1.1/3.0" date="2005-08-14" description="Dependencies">
      <action dev="jand" type="update">
        Update of dependencies.
      </action>
    </release>

    <release version="I v3.1.1/2.0" date="2005-08-12" description="dao implements Serializable">
      <action dev="jand" type="fix">
        Making dao's Serializable was a mistake. This release fixes that mistake.
        Don't use I v3.1.0/2.0.
      </action>
    </release>

    <release version="I v3.1.0/2.0" date="2005-08-12" description="dao implements Serializable">
      <action dev="jand" type="fix">
        Dao's are now Serializable. This was required, via via, for x:tree2 in JSF.
        But it actually makes sense in Tomcat, so â€¦
      </action>
    </release>

    <release version="I v3.0.0/2.0" date="2005-08-10" description="toString issue solved">
      <action dev="jand" type="fix">
          Fixed longstanding toString() issue. toString returned a full description
          of the bean, effectively (especially during debugging) taking shitloads
          of time. Now, we just return the standard toString plus the id.
      </action>
      <action dev="jand" type="remove">
        toShortString() and unclosedProperties() methods deprecated
      </action>
      <action dev="jand" type="add">
        Added methods to produce full String representation of bean,
        automatically, also for subclasses.
      </action>
    </release>

  </body>
</document>